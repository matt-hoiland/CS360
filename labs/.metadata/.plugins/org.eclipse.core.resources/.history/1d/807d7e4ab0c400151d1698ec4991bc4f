#include <iostream>
#include <sstream>
#include <stdexcept>

#include <sys/stat.h>
#include <sys/types.h>
#include <unistd.h>

using namespace std;

struct args_t {
	bool debug;
	int port;
	const char* dir;
};

bool parse_args(int argc, char** argv, struct args_t* args);

int main(int argc, char** argv) {
	cout << "This is the part when..." << endl;

	bool debug = false;


	return 0;
}

bool parse_args(int argc, char** argv, struct args_t* args) {
	int option;
	while ((option = getopt(argc, argv, "d")) != -1) {
		switch (option) {
		case 'd' :
			args->debug = true;
			break;
		}
	}

	istringstream num(argv[optind]);
	if (!(num >> args->port)) {
		cout << "USAGE: <port> should be a number, given: " << argv[optind] << endl;
		return false;
	}

	const char* dir = argv[optind + 1];
	struct stat dirstat;

	if (stat(dir, &dirstat)) {
		cout << "ERROR: failed to stat " << dir << endl;
		return false;
	}
	if (!S_ISDIR(dirstat.st_mode) || !(dirstat.st_mode & S_IROTH)) {
		cout << "USAGE: <dir> should be a public directory, given: " << dir << endl;
		return false;
	}

	return true;
}
