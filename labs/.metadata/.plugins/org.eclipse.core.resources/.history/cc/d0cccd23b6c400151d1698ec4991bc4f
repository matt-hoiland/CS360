/*
 * Server.h
 *
 *  Created on: Jan 26, 2016
 *      Author: matt
 */

#ifndef SERVER_H_
#define SERVER_H_

#include <netinet/in.h>
#include <string.h>
#include <sys/socket.h>
#include <sys/types.h>
#include <unistd.h>

using namespace std;

class Server {
private:
	bool debug;
	unsigned int port;
	string dir;

	int server;
	bool serving;

	void create() {
		struct sockaddr_in serverAddress;

		memset(&serverAddress, 0, sizeof(serverAddress));
		serverAddress.sin_family = AF_INET;
		serverAddress.sin_port = htons(port);
	}

	void serve() {

	}

public:
	Server(bool debug, unsigned int port, string dir) :
		debug(debug), port(port), dir(dir), server(0), serving(false) {}
	~Server() {}

	void run() {
		cout << "Woot!" << endl;
	}

	void stop() {

	}
};



#endif /* SERVER_H_ */
